<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>test_image</title>
    <link href="/2024/12/03/test-image/"/>
    <url>/2024/12/03/test-image/</url>
    
    <content type="html"><![CDATA[<p>图片：<br><img src="/2024/12/03/test-image/1733227147799.png" alt="1733227147799"></p><p>公式：</p><script type="math/tex; mode=display">a + b = c</script>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Web</title>
    <link href="/2024/12/03/Web/"/>
    <url>/2024/12/03/Web/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h2 id="认识漏洞"><a href="#认识漏洞" class="headerlink" title="认识漏洞"></a>认识漏洞</h2><p>术语：</p><p>poc：证明漏洞存在；exp：漏洞利用脚本</p><h3 id="漏洞利用方式"><a href="#漏洞利用方式" class="headerlink" title="漏洞利用方式"></a>漏洞利用方式</h3><ul><li>失能：拒接服务(DOS)</li><li>读取：读取敏感文件（文件包含）；读取数据库信息（SQL注入）</li><li>写入：篡改数据；提权；加密硬盘</li><li>执行：执行命令；内网渗透；反弹shell</li></ul><h3 id="做题思路"><a href="#做题思路" class="headerlink" title="做题思路"></a>做题思路</h3><ol><li>判断利用的漏洞方式为<strong>读取、写入还是执行</strong>，不能马上确定，从低到高依次挖掘。</li><li>判断漏洞大概的类型。例如：登录逻辑，尝试sql注入；下载逻辑，尝试文件读取；给源码做代码审计。</li><li>寻找敏感数据</li></ol><h2 id="信息泄露"><a href="#信息泄露" class="headerlink" title="信息泄露"></a>信息泄露</h2><h3 id="信息泄露的类型"><a href="#信息泄露的类型" class="headerlink" title="信息泄露的类型"></a>信息泄露的类型</h3><ul><li>版本软件信息泄露：</li></ul><p>git，svn，hg，bzr，cvs</p><ul><li>敏感文件信息泄露：</li></ul><p>robots.txt，www.zip，静态文件注释泄露</p><ul><li>配置错误信息泄露：</li></ul><p>DS_Store，WEB.INF，Apache/Nginx错误配置</p><h3 id="信息泄露漏洞利用"><a href="#信息泄露漏洞利用" class="headerlink" title="信息泄露漏洞利用"></a>信息泄露漏洞利用</h3><h4 id="http头信息泄露"><a href="#http头信息泄露" class="headerlink" title="http头信息泄露"></a>http头信息泄露</h4><p><code>/admin</code>和<code>/admin/</code>区别：</p><p>/admin：访问admin这个文件，没有的话直接返回404，不会寻找索引文件</p><p>/admin/：访问admin目录，会默认访问目录里面的索引文件（index.php，index.html）</p><p>区别访问路由和访问文件：</p><p>/user：访问user路由，如果含有后缀(php，html，asp，jsp)是基于文件(其实也不能明确区别，所见非真)，看后台有没有监听理由？？</p><p>状态码：</p><ul><li>200 正常</li><li>301 302 表示跳转</li><li>400出现不可识别字符</li><li>403表示目录存在，但访问禁止</li><li>404表示文件不存在</li><li>500服务器内部错误</li><li>502转发失败</li></ul><p>network里点开每个包可查看server、状态码、使用时间等信息</p><h4 id="报错信息泄露"><a href="#报错信息泄露" class="headerlink" title="报错信息泄露"></a>报错信息泄露</h4><p>通过报错信息泄露服务器状态</p><h4 id="页面信息泄露"><a href="#页面信息泄露" class="headerlink" title="页面信息泄露"></a>页面信息泄露</h4><p>查看页面源代码、控制台等</p><h4 id="robots-txt敏感文件泄露"><a href="#robots-txt敏感文件泄露" class="headerlink" title="robots.txt敏感文件泄露"></a>robots.txt敏感文件泄露</h4><p>爬虫协议，规定哪些内容不能访问（正规的搜索引擎爬虫都会遵守），但没有任何强制约束力。</p><p>格式：</p><p>User-agent：每个搜索引擎的爬虫标识</p><p>Disallow：不允许访问哪些链接</p><p>Disallow：…….</p><h4 id="git文件泄露"><a href="#git文件泄露" class="headerlink" title=".git文件泄露"></a>.git文件泄露</h4><p>版本控制系统（版本号）</p><p>githack脚本利用(windows)：[遇到403禁止时，可以尝试]</p><p>（原理）解析.git/index文件，找到所有的：（文件名，文件sha1）;接着去.git/objects/文件夹下载对应文件；zlib解压文件，按原始的结构写入源代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python .\GitHack.py -u <span class="hljs-string">&quot;https://xxxx/.git/&quot;</span><span class="hljs-string">&quot;</span><br></code></pre></td></tr></table></figure><h4 id="搜索引擎文件泄露"><a href="#搜索引擎文件泄露" class="headerlink" title="搜索引擎文件泄露"></a>搜索引擎文件泄露</h4><p>(百度)<code>intitle:xx后台登录</code>标题</p><p>(fofa网络安全搜索引擎)<code>title=&quot;xx&quot;文件上传</code>标题</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ol><li><code>robots.txt</code>泄露</li><li><code>.git/</code> <code>.svn/</code>泄露（访问目录出现403访问禁止）</li><li>源代码泄露、http头泄露</li><li><strong>任意文件下载造成的信息泄露</strong></li><li>开源社区信息泄露，例如：泄露项目名称，整个项目代码可以在github等找到</li><li>使用vim异常退出，造成类似<code>index.php.swp</code>临时文件</li></ol><h2 id="Burpsuite与爆破"><a href="#Burpsuite与爆破" class="headerlink" title="Burpsuite与爆破"></a>Burpsuite与爆破</h2><p>爆破-&gt;防止：验证码；</p><p>8位字符-&gt;76亿年，不到万不得已不用；</p><ol><li>单个位置：sniper</li><li>两个位置：cluster bomb，两个simplist导入两个payload</li><li>http认证爆破：输入的字符经过编码处理，例如admin:123456(经过base64编码)：payload导入password字典，在payload处理里加入前缀和编码，取消url编码</li></ol><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><h4 id="web1"><a href="#web1" class="headerlink" title="web1"></a>web1</h4><p>源码</p><h4 id="web2"><a href="#web2" class="headerlink" title="web2"></a>web2</h4><p>无法查看源码-&gt;开发者工具；</p><p>在URL前加上<code>view-source:</code></p><h4 id="web3"><a href="#web3" class="headerlink" title="web3"></a>web3</h4><p>抓包-&gt;响应；</p><p>或查看请求头和响应头，在响应头可找到flag</p><h4 id="web4"><a href="#web4" class="headerlink" title="web4"></a>web4</h4><p>/robots.txt</p><h4 id="web5"><a href="#web5" class="headerlink" title="web5"></a>web5</h4><p>phps源码泄露-&gt;/index.phps</p><h4 id="web6"><a href="#web6" class="headerlink" title="web6"></a>web6</h4><p>解压源码-&gt;/www.zip，得到文件名，url访问</p><h4 id="web7"><a href="#web7" class="headerlink" title="web7"></a>web7</h4><p>版本控制-&gt;/.git/</p><h4 id="web8"><a href="#web8" class="headerlink" title="web8"></a>web8</h4><p>版本控制-&gt;/.svn/</p><h4 id="web9"><a href="#web9" class="headerlink" title="web9"></a>web9</h4><p>vim非正常退出，产生<code>index.php.swp</code>文件</p><h4 id="web10"><a href="#web10" class="headerlink" title="web10"></a>web10</h4><p>cookie信息泄露，URL解码；</p><p>查看请求头的cookie</p><h4 id="web11"><a href="#web11" class="headerlink" title="web11"></a>web11</h4><p>域名信息泄露，使用 <a href="https://zijian.aliyun.com/进行域名查询；">https://zijian.aliyun.com/进行域名查询；</a></p><p>nslookup进行域名查询，命令：<code>nslookup -query=any (hostname)</code></p><h4 id="web12"><a href="#web12" class="headerlink" title="web12"></a>web12</h4><p>访问robots.txt文件发现后台地址，进入后台登录，用户名为admin，密码为网站底部的数字</p><h4 id="web13"><a href="#web13" class="headerlink" title="web13"></a>web13</h4><p>技术文档，网页底部document连接，发现敏感信息</p><h4 id="web14"><a href="#web14" class="headerlink" title="web14"></a>web14</h4><p>editor信息泄露，访问url/editor/发现编辑器，在flash上传按键上发现文件空间，可爆出目录，</p><p>flag在<code>/var/www/html/nothinghere/fl000g.txt</code>中，构造<code>url/nothinghere/fl000g.txt</code>访问。</p><h4 id="web15"><a href="#web15" class="headerlink" title="web15"></a>web15</h4><p>邮箱信息泄露，访问后台，忘记密码，查询qq号，可知密保答案</p><h4 id="web16"><a href="#web16" class="headerlink" title="web16"></a>web16</h4><p>探针：</p><p><em>php探针是用来探测空间、服务器运行状况和PHP信息用的，探针可以实时查看服务器硬盘资源、内存占用、网卡流量、系统负载、服务器时间等信息。是一个查看服务器信息的工具。</em><br><em>比如查看服务器支持什么，不支持什么，空间速度等等状况！</em></p><p>访问<code>url/tz.php</code>，查看phpinfo即可获得flag</p><h4 id="web17"><a href="#web17" class="headerlink" title="web17"></a>web17</h4><p>备份的sql文件，访问<code>url/backup.sql</code></p><h4 id="web18"><a href="#web18" class="headerlink" title="web18"></a>web18</h4><p>查看js文件，发现分数大于100会出现窗口编码，unicode解码</p><h4 id="web19"><a href="#web19" class="headerlink" title="web19"></a>web19</h4><p>查看源码，发现用户名密码，post提交即可</p><h4 id="web20"><a href="#web20" class="headerlink" title="web20"></a>web20</h4><p>mdb文件泄露，访问<code>url/db/db.mdb</code></p><h3 id="爆破"><a href="#爆破" class="headerlink" title="爆破"></a>爆破</h3><h4 id="web21"><a href="#web21" class="headerlink" title="web21"></a>web21</h4><p>加前缀<code>admin:</code>，以及加编码方式<code>base64</code>，去掉url编码</p><h4 id="web22"><a href="#web22" class="headerlink" title="web22"></a>web22</h4><p>爆破子域名，layer域名挖掘机</p><h4 id="web23"><a href="#web23" class="headerlink" title="web23"></a>web23</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">include</span>(<span class="hljs-string">&#x27;flag.php&#x27;</span>);         <span class="hljs-comment">//引入php文件</span><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;token&#x27;</span>]))&#123;   <span class="hljs-comment">//检查url中是否包含token参数</span><br>    <span class="hljs-variable">$token</span> = <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;token&#x27;</span>]);    <span class="hljs-comment">//将输入的参数转换为md5值</span><br>    <span class="hljs-comment">//substr(xx,1,1)字符截取第二个字符，intval转换为整数</span><br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-variable">$token</span>, <span class="hljs-number">1</span>,<span class="hljs-number">1</span>)===<span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-variable">$token</span>, <span class="hljs-number">14</span>,<span class="hljs-number">1</span>) &amp;&amp; <span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-variable">$token</span>, <span class="hljs-number">14</span>,<span class="hljs-number">1</span>) ===<span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-variable">$token</span>, <span class="hljs-number">17</span>,<span class="hljs-number">1</span>))&#123;<br>        <span class="hljs-keyword">if</span>((<span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-variable">$token</span>, <span class="hljs-number">1</span>,<span class="hljs-number">1</span>))+<span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-variable">$token</span>, <span class="hljs-number">14</span>,<span class="hljs-number">1</span>))+<span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-variable">$token</span>, <span class="hljs-number">17</span>,<span class="hljs-number">1</span>))/<span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-variable">$token</span>, <span class="hljs-number">1</span>,<span class="hljs-number">1</span>)===<span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-variable">$token</span>, <span class="hljs-number">31</span>,<span class="hljs-number">1</span>)))&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>        &#125;<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><br>&#125;<br></code></pre></td></tr></table></figure><p>md5后需要满足一定特性，爆破两位数字加字母的组合，python脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> hashlib<br><br><span class="hljs-built_in">dict</span>=<span class="hljs-string">&quot;0123456789abcdefghijklmnopqrstuvwxyz&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">dict</span>:<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">dict</span>:<br>        b = <span class="hljs-built_in">str</span>(i)+<span class="hljs-built_in">str</span>(j)<br>        mb = hashlib.md5(b.encode(<span class="hljs-string">&quot;utf-8&quot;</span>)).hexdigest()    <span class="hljs-comment">#以十六进制字符串方式存储</span><br>        <span class="hljs-keyword">if</span> mb[<span class="hljs-number">1</span>:<span class="hljs-number">2</span>]==mb[<span class="hljs-number">14</span>:<span class="hljs-number">15</span>] <span class="hljs-keyword">and</span> mb[<span class="hljs-number">14</span>:<span class="hljs-number">15</span>]==mb[<span class="hljs-number">17</span>:<span class="hljs-number">18</span>]:<br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">int</span>(mb[<span class="hljs-number">1</span>:<span class="hljs-number">2</span>])+<span class="hljs-built_in">int</span>(mb[<span class="hljs-number">14</span>:<span class="hljs-number">15</span>])+<span class="hljs-built_in">int</span>(mb[<span class="hljs-number">17</span>:<span class="hljs-number">18</span>])/<span class="hljs-built_in">int</span>(mb[<span class="hljs-number">1</span>:<span class="hljs-number">2</span>]))==<span class="hljs-built_in">int</span>(mb[<span class="hljs-number">31</span>:<span class="hljs-number">32</span>]):<br>                <span class="hljs-built_in">print</span>(b)<br><br></code></pre></td></tr></table></figure><h4 id="web24"><a href="#web24" class="headerlink" title="web24"></a>web24</h4><p>随机数种子固定，随机数也随之固定，输出该随机数即可：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-title function_ invoke__">mt_srand</span>(<span class="hljs-number">372619038</span>);<br>    <span class="hljs-variable">$num</span> = <span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-title function_ invoke__">mt_rand</span>());<br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$num</span>;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h4 id="web25"><a href="#web25" class="headerlink" title="web25"></a>web25</h4><p>代码审计：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">include</span>(<span class="hljs-string">&quot;flag.php&quot;</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;r&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$r</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;r&#x27;</span>];<br>    <span class="hljs-title function_ invoke__">mt_srand</span>(<span class="hljs-title function_ invoke__">hexdec</span>(<span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$flag</span>), <span class="hljs-number">0</span>,<span class="hljs-number">8</span>)));<br>    <span class="hljs-variable">$rand</span> = <span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-variable">$r</span>)-<span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-title function_ invoke__">mt_rand</span>());<br>    <span class="hljs-keyword">if</span>((!<span class="hljs-variable">$rand</span>))&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable">$_COOKIE</span>[<span class="hljs-string">&#x27;token&#x27;</span>]==(<span class="hljs-title function_ invoke__">mt_rand</span>()+<span class="hljs-title function_ invoke__">mt_rand</span>()))&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>        &#125;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$rand</span>;<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>    <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&#x27;cat /proc/version&#x27;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>分析：</p><p>本题没有给出随机数的种子，但可以构造?r=0，通过输出rand来得到第一个随机数；</p><p>使用逆推工具得到随机数，得到第二个和第三个随机数相加的结果构造cookie。</p><p>首先得到网站php版本：</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>git多人合作</title>
    <link href="/2024/12/01/git%E5%A4%9A%E4%BA%BA%E5%90%88%E4%BD%9C/"/>
    <url>/2024/12/01/git%E5%A4%9A%E4%BA%BA%E5%90%88%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><p>参考：<a href="https://www.bilibili.com/video/BV1UB4y1Z7Jg/?spm_id_from=333.337.search-card.all.click&amp;vd_source=a8de5b20aced8e4ba8bfa351984edc3b">https://www.bilibili.com/video/BV1UB4y1Z7Jg/?spm_id_from=333.337.search-card.all.click&amp;vd_source=a8de5b20aced8e4ba8bfa351984edc3b</a></p><h4 id="查看分支"><a href="#查看分支" class="headerlink" title="查看分支"></a>查看分支</h4><p>远程仓库克隆时，Git默认把本地的master分支和远程的master分支对应</p><p>仓库克隆命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git clone (ssh链接)<br></code></pre></td></tr></table></figure><p>查看分支：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git branch<br></code></pre></td></tr></table></figure><p>查看远程仓库信息：(仓库分支)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git remote -v<br></code></pre></td></tr></table></figure><h4 id="推送分支-新建分支"><a href="#推送分支-新建分支" class="headerlink" title="推送分支(新建分支)"></a>推送分支(新建分支)</h4><p>命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git push (仓库名) (分支名)<br></code></pre></td></tr></table></figure><h3 id="在dev分支上协作开发，抓取远程分支"><a href="#在dev分支上协作开发，抓取远程分支" class="headerlink" title="在dev分支上协作开发，抓取远程分支"></a>在dev分支上协作开发，抓取远程分支</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git checkout -b dev<br></code></pre></td></tr></table></figure><h4 id="提交文件"><a href="#提交文件" class="headerlink" title="提交文件"></a>提交文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git add &quot;xxx&quot;<br></code></pre></td></tr></table></figure><h4 id="推送本地"><a href="#推送本地" class="headerlink" title="推送本地"></a>推送本地</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git commit -m &quot;xxx&quot;<br></code></pre></td></tr></table></figure><h4 id="推送远程"><a href="#推送远程" class="headerlink" title="推送远程"></a>推送远程</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git push (仓库名) (分支名)<br></code></pre></td></tr></table></figure><p>如果远程代码更新，需要先<code>git pull</code> 解决冲突</p><p>Pycharm提供操作快捷键，比较方便。</p>]]></content>
    
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
